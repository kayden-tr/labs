name: apache-kafka

services:
  zookeeper:
    image: bitnami/zookeeper:3.6.3-debian-10-r327
    environment:
      - ALLOW_ANONYMOUS_LOGIN=false
      - ZOO_ENABLE_AUTH=true
      - JVMFLAGS=-Xmx4g -Xms4g -Djute.maxbuffer=50000000
      - ZOO_LISTEN_ALLIPS_ENABLED=yes
      - ZOO_LOG_LEVEL=INFO
      - ZOO_MAX_CLIENT_CNXNS=0
      - ZOO_ENABLE_ADMIN_SERVER=false
      - ZOO_SERVERS=zookeeper:2888:3888
      - ZOO_AUTOPURGE_INTERVAL=1
      - ZOO_AUTOPURGE_RETAIN_COUNT=3
# Zookeeper-Kafka configuration
      - ZOO_SERVER_USERS=${ZOO_SERVER_USERS}
      - ZOO_SERVER_PASSWORDS=${ZOO_SERVER_PASSWORDS}
    volumes:
      - zk_data:/bitnami
    restart: always
    network_mode: host

  server:
    image: bitnami/kafka:2.5.0-debian-10-r112
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=127.0.0.1:2181
      - KAFKA_CFG_LISTENERS=SASL_PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=SASL_PLAINTEXT://${HOST_IP}:9092
# Kafka configuration
      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=${KAFKA_CFG_SASL_ENABLED_MECHANISMS}
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=${KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL}
      - KAFKA_CFG_SECURITY_INTER_BROKER_PROTOCOL=${KAFKA_CFG_SECURITY_INTER_BROKER_PROTOCOL}
      - KAFKA_CFG_AUTHORIZER_CLASS_NAME=${KAFKA_CFG_AUTHORIZER_CLASS_NAME}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP}
      - KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND=${KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND-:true}
# Kafka user credentials
      - KAFKA_ZOOKEEPER_PROTOCOL=${KAFKA_ZOOKEEPER_PROTOCOL}
      - KAFKA_ZOOKEEPER_USER=${KAFKA_ZOOKEEPER_USER} 
      - KAFKA_ZOOKEEPER_PASSWORD=${KAFKA_ZOOKEEPER_PASSWORD}
      - KAFKA_HEAP_OPTS=-Xmx8g -Xms8g
      - KAFKA_CFG_NUM_PARTITIONS=3
      - JMX_PORT=7200
    volumes:
      - data:/bitnami
      - ./kafka_jaas.conf:/opt/bitnami/kafka/config/kafka_jaas.conf
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "127.0.0.1:2181"]
      interval: 10s
      timeout: 5s
    depends_on:
      zookeeper:
        condition: service_started
    restart: always
    network_mode: host

volumes:
  zk_data:
  data:
